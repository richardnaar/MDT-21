<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2021.2.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="https://docs.google.com/forms/d/e/1FAIpQLScw9cWJDrjFKZ7LnAzjteDlap0OT_jjjnqFpb5YyWzcEdooPw/viewform?usp=sf_link" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="https://docs.google.com/forms/d/e/1FAIpQLScw9cWJDrjFKZ7LnAzjteDlap0OT_jjjnqFpb5YyWzcEdooPw/viewform?usp=sf_link" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="list"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save hdf5 file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="False" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="latest" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1920, 1200]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="elAddress" updates="None" val="100.1.1.1" valType="str"/>
    <Param name="elDataFiltering" updates="None" val="FILTER_LEVEL_2" valType="str"/>
    <Param name="elLiveFiltering" updates="None" val="FILTER_LEVEL_OFF" valType="str"/>
    <Param name="elModel" updates="None" val="EYELINK 1000 DESKTOP" valType="str"/>
    <Param name="elPupilAlgorithm" updates="None" val="ELLIPSE_FIT" valType="str"/>
    <Param name="elPupilMeasure" updates="None" val="PUPIL_AREA" valType="str"/>
    <Param name="elSampleRate" updates="None" val="1000" valType="num"/>
    <Param name="elSimMode" updates="None" val="False" valType="bool"/>
    <Param name="elTrackEyes" updates="None" val="RIGHT_EYE" valType="str"/>
    <Param name="elTrackingMode" updates="None" val="PUPIL_CR_TRACKING" valType="str"/>
    <Param name="expName" updates="None" val="mdt" valType="str"/>
    <Param name="exportHTML" updates="None" val="manually" valType="str"/>
    <Param name="eyetracker" updates="None" val="None" valType="str"/>
    <Param name="gpAddress" updates="None" val="127.0.0.1" valType="str"/>
    <Param name="gpPort" updates="None" val="4242" valType="num"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="mgBlink" updates="None" val="('MIDDLE_BUTTON',)" valType="list"/>
    <Param name="mgMove" updates="None" val="CONTINUOUS" valType="str"/>
    <Param name="mgSaccade" updates="None" val="0.5" valType="num"/>
    <Param name="tbLicenseFile" updates="None" val="" valType="str"/>
    <Param name="tbModel" updates="None" val="" valType="str"/>
    <Param name="tbSampleRate" updates="None" val="60" valType="num"/>
    <Param name="tbSerialNo" updates="None" val="" valType="str"/>
  </Settings>
  <Routines>
    <Routine name="assess">
      <CodeComponent name="slf_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="on_scale = 0;&amp;#10;slf_mouse.setPos([0, (- 0.2)]);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="on_scale = 0&amp;#10;slf_mouse.setPos([0,-0.2])" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="mx = slf_mouse.getPos()&amp;#10;if mx[1] &gt; -0.125 and mx[1] &lt; -0.075:&amp;#10;    on_scale = 1&amp;#10;mx[1] = -0.1&amp;#10;if mx[0] &lt;= -0.5:&amp;#10;    mx[0] = -0.5&amp;#10;elif mx[0] &gt;= 0.5:&amp;#10;    mx[0] = 0.5" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="mx = slf_mouse.getPos();&amp;#10;if (((mx[1] &gt; (- 0.125)) &amp;&amp; (mx[1] &lt; (- 0.075)))) {&amp;#10;    on_scale = 1;&amp;#10;}&amp;#10;mx[1] = (- 0.1);&amp;#10;if ((mx[0] &lt;= (- 0.5))) {&amp;#10;    mx[0] = (- 0.5);&amp;#10;} else {&amp;#10;    if ((mx[0] &gt;= 0.5)) {&amp;#10;        mx[0] = 0.5;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((nSelf === 1)) {&amp;#10;    currentLoop.addData(&quot;slf_question&quot;, item);&amp;#10;    currentLoop.addData(&quot;slf_response&quot;, (mx[0] + 0.5));&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="if nSelf == 1:&amp;#10;    currentLoop.addData('slf_question', item)&amp;#10;    currentLoop.addData('slf_response', mx[0] + 0.5)&amp;#10;" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="slf_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="slf_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.05" valType="code"/>
        <Param name="name" updates="None" val="slf_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$item" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.5" valType="code"/>
      </TextComponent>
      <TextComponent name="scale_low">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="scale_low" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.65, -0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.25" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$label_low" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="scale_high">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.03" valType="code"/>
        <Param name="name" updates="None" val="scale_high" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.65, -0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.25" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$label_high" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <PolygonComponent name="slf_scale">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="slf_scale" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.1)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(1, 0.05)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.25" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <PolygonComponent name="slf_set">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[0, 0, 0]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[0, 0, 0]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="slf_set" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="$mx" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.01, 0.05)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="on_scale == 1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <MouseComponent name="slf_mouse">
        <Param name="clickable" updates="constant" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="any click" valType="str"/>
        <Param name="name" updates="None" val="slf_mouse" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="final" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
    </Routine>
    <Routine name="intro">
      <CodeComponent name="intro_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="# enter 1 for test monkey&amp;#10;test = 0&amp;#10;&amp;#10;import random&amp;#10;import math&amp;#10;aspect = win.size[0]/win.size[1]&amp;#10;&amp;#10;# make a color list&amp;#10;col_list = [[230, 25, 75], # red&amp;#10;            [0, 120, 200]] # blue&amp;#10;#            [0, 120, 0]] # green&amp;#10;#            [230, 190, 255], # levander&amp;#10;#            [170, 110, 40], # brown&amp;#10;#            [245, 130, 48]] # orange&amp;#10;# counterbalance color mapping&amp;#10;random.shuffle(col_list)&amp;#10;# normalize&amp;#10;for i,k in enumerate(col_list): &amp;#10;    for j,l in enumerate(k): &amp;#10;        col_list[i][j] = (l/255)*2 - 1&amp;#10;&amp;#10;# 10% steps would be -0.32 -0.24 -0.16 -0.08  0.00  0.08  0.16  0.24  0.32  0.40&amp;#10;# at 40% and 70%&amp;#10;base_avg_list = [0.16, -0.08]&amp;#10;&amp;#10;# the value that is added to generate variabilities&amp;#10;base_var_list = [0.01, 0.06]&amp;#10;&amp;#10;# make condition counterbalancer&amp;#10;cond_list = [[0, 0],&amp;#10;             [0, 1],&amp;#10;             [1, 0],&amp;#10;             [1, 1]]&amp;#10;random.shuffle(cond_list)&amp;#10;&amp;#10;point_counter = 0&amp;#10;res = &quot;free&quot;&amp;#10;total_err = []&amp;#10;block_err = []&amp;#10;color = [0,0,0]" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="/* Syntax Error: Fix Python code */" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;color = [0, 0, 0];&amp;#10;if ((regime === (- 1))) {&amp;#10;    block_number = (- 1);&amp;#10;}&amp;#10;if ((regime === (- 2))) {&amp;#10;    point_counter = 0;&amp;#10;}&amp;#10;if ((regime === 2)) {&amp;#10;    random.shuffle(interval_type_inds);&amp;#10;}&amp;#10;interval_type = interval_type_inds[sub_block_nr];&amp;#10;result_type = result_type_list[(block_nr - 1)][interval_type];&amp;#10;if (((nTrial &gt; 0) || _pj.in_es6(&quot;recall&quot;, modes))) {&amp;#10;    color = col_list[interval_type];&amp;#10;}&amp;#10;if ((regime &gt; 0)) {&amp;#10;    block_number += 1;&amp;#10;    block_err = [];&amp;#10;    if ((! _pj.in_es6(&quot;goal&quot;, modes))) {&amp;#10;        intro_text_content = ((&quot;Meenuta &quot; + (block_number + 1).toString()) + &quot;. seeriat \u00e4sja l\u00f5ppenud seeriatekolmikust.&quot;);&amp;#10;    } else {&amp;#10;        intro_text_content = &quot;Algab uus punktide kogumise seeria.&quot;;&amp;#10;    }&amp;#10;}&amp;#10;goal_value = goal_value_list[interval_type];&amp;#10;goal_value = (goal_value + (util.randint(0, 5) / 100));&amp;#10;if ((result_type === &quot;v\u00f5itsid&quot;)) {&amp;#10;    result_value = ((goal_value + 0.06) + (util.randint(0, 5) / 100));&amp;#10;} else {&amp;#10;    result_value = ((goal_value - 0.06) - (util.randint(0, 5) / 100));&amp;#10;}&amp;#10;if ((id === 35)) {&amp;#10;    intro_text_content += ((&quot;\n\nSu skooriks kujunes &quot; + Math.round(point_counter).toString()) + &quot; punkti!&quot;);&amp;#10;    if ((point_counter &gt; 20)) {&amp;#10;        intro_text_content += &quot;\n\nPalju \u00f5nne, sellega oled v\u00f5itnud tahvli \u0161okolaadi!&quot;;&amp;#10;    } else {&amp;#10;        intro_text_content += &quot;\n\nSellega oled tahvli \u0161okolaadi siiski auga v\u00e4lja teeninud!&quot;;&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((id === 36)) {&amp;#10;        intro_text_content += ((&quot; &quot; + (100 - Math.round((100 * (util.sum(total_err) / total_err.length)))).toString()) + &quot; protsenti.&quot;);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if nTrial &gt; 0:&amp;#10;    # set the counterbalanced color based on difficulty&amp;#10;    color = col_list[dif]   &amp;#10;&amp;#10;# FEEDBACK BAR&amp;#10;&amp;#10;# get a fixed base result value and add a jitter&amp;#10;avg = base_avg_list[dif] + randint(0,5)/100&amp;#10;# generate result values that would be at 10% to 15% distance from the goal.&amp;#10;perf_pos = [&amp;#10;(0, (avg - 2*base_var_list[var] + randint(0,5)/100)),&amp;#10;(0, (avg - base_var_list[var] + randint(0,5)/100)),&amp;#10;(0, (avg + base_var_list[var] + randint(0,5)/100)),&amp;#10;(0, (avg + 2*base_var_list[var] + randint(0,5)/100)),&amp;#10;]&amp;#10;&amp;#10;# show feedback&amp;#10;if id == 35:&amp;#10;    intro_text_content += &quot;\n\nSu skooriks kujunes &quot; + str(round(point_counter)) + &quot; punkti!&quot; &amp;#10;    if point_counter &gt; 20:&amp;#10;        intro_text_content += &quot;\n\nPalju õnne, sellega oled võitnud tahvli šokolaadi!&quot;&amp;#10;    else: &amp;#10;        intro_text_content += &quot;\n\nSellega oled tahvli šokolaadi siiski auga välja teeninud!&quot;&amp;#10;&amp;#10;elif id == 36:&amp;#10;    intro_text_content += &quot; &quot; + str(100 - round(100*(sum(total_err)/len(total_err)))) + &quot; protsenti.&quot;&amp;#10;    #  {:.0f} protsenti&quot;.format(err) &amp;#10;    &amp;#10;point_counter += (avg * 200) + 2&amp;#10;bar_instruction = &quot;\n\nSul on nüüd &quot; + str(round(point_counter)) + &quot; punkti.&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="if ((regime === 1)) {&amp;#10;    currentLoop.addData(&quot;color&quot;, color);&amp;#10;    currentLoop.addData(&quot;block_number&quot;, block_number);&amp;#10;    currentLoop.addData(&quot;goal_value&quot;, goal_value);&amp;#10;    currentLoop.addData(&quot;result_value&quot;, result_value);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="currentLoop.addData('difficulty', dif)&amp;#10;currentLoop.addData('variance', var)&amp;#10;currentLoop.addData('point_mean', avg)&amp;#10;currentLoop.addData('points', perf_pos)&amp;#10;currentLoop.addData('color', color)" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="intro_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="intro_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="intro_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$intro_text_content" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.25" valType="code"/>
      </TextComponent>
      <PolygonComponent name="intro_next">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="0" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="intro_next" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="90" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="triangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$(0.12, 0.12)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <MouseComponent name="intro_mouse">
        <Param name="clickable" updates="constant" val="intro_next" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="intro_mouse" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
    </Routine>
    <Routine name="draw">
      <MouseComponent name="mouse">
        <Param name="clickable" updates="constant" val="next" valType="list"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="mouse" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="every frame" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="list"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <BrushComponent name="brush">
        <Param name="buttonRequired" updates="set every repeat" val="True" valType="bool"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="color"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1.5" valType="num"/>
        <Param name="name" updates="None" val="brush" valType="code"/>
        <Param name="opacity" updates="constant" val="" valType="num"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
      </BrushComponent>
      <TextComponent name="timer">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="timer" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.4, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$dur" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="distance">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="distance" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.2, 0.4)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="$current_dist" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="wait = 0;&amp;#10;dur = 0;&amp;#10;n = 4;&amp;#10;angle = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(n);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(0);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;length = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(n);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push(0);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;center = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(n);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push([]);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;end = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(n);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push([]);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;start = function () {&amp;#10;    var _pj_a = [], _pj_b = util.range(n);&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var i = _pj_b[_pj_c];&amp;#10;        _pj_a.push([]);&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;for (var i, _pj_c = 0, _pj_a = util.range(n), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    i = _pj_a[_pj_c];&amp;#10;    within = 0;&amp;#10;    while ((within === 0)) {&amp;#10;        angle[i] = random.randrange(360);&amp;#10;        length[i] = (random.randrange(10, 40) / 100);&amp;#10;        if ((i === 0)) {&amp;#10;            center[i] = [(random.randrange(((- 50) + 20), (50 - 20)) / 100), (random.randrange(((- 50) + 20), (50 - 20)) / 100)];&amp;#10;        } else {&amp;#10;            center[i] = [(end[(i - 1)][0] + ((length[i] * Math.cos(math.radians(angle[i]))) / 2)), (end[(i - 1)][1] + ((length[i] * Math.sin(math.radians(angle[i]))) / 2))];&amp;#10;        }&amp;#10;        end[i] = [(center[i][0] + ((length[i] * Math.cos(math.radians(angle[i]))) / 2)), (center[i][1] + ((length[i] * Math.sin(math.radians(angle[i]))) / 2))];&amp;#10;        start[i] = [(center[i][0] - ((length[i] * Math.cos(math.radians(angle[i]))) / 2)), (center[i][1] - ((length[i] * Math.sin(math.radians(angle[i]))) / 2))];&amp;#10;        if (((((Math.abs(end[i][0]) &lt; 0.5) &amp;&amp; (Math.abs(end[i][1]) &lt; 0.5)) &amp;&amp; (Math.abs(center[i][0]) &lt; 0.5)) &amp;&amp; (Math.abs(center[i][1]) &lt; 0.5))) {&amp;#10;            within = 1;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;la = new visual.Line(psychoJS.window, {&quot;start&quot;: start[0], &quot;end&quot;: end[0], &quot;lineColor&quot;: &quot;white&quot;});&amp;#10;lb = new visual.Line(psychoJS.window, {&quot;start&quot;: start[1], &quot;end&quot;: end[1], &quot;lineColor&quot;: &quot;white&quot;});&amp;#10;lc = new visual.Line(psychoJS.window, {&quot;start&quot;: start[2], &quot;end&quot;: end[2], &quot;lineColor&quot;: &quot;white&quot;});&amp;#10;ld = new visual.Line(psychoJS.window, {&quot;start&quot;: start[3], &quot;end&quot;: end[3], &quot;lineColor&quot;: &quot;white&quot;});&amp;#10;lines = [la, lb, lc, ld];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="dur = 0&amp;#10;wait = 0&amp;#10;dist = []&amp;#10;lines = []&amp;#10;current_dist = 0&amp;#10;&amp;#10;# set the number of links based on difficulty&amp;#10;n = [3,6][dif]&amp;#10;angle = [0]*n&amp;#10;length = [0]*n&amp;#10;start = [[]]*n&amp;#10;end = [[]]*n&amp;#10;&amp;#10;# make subsequent line segments (as many as needed)&amp;#10;for i in range(n):&amp;#10;    within = 0&amp;#10;    while within == 0:&amp;#10;        angle[i] = random.randrange(360)&amp;#10;        length[i] = random.randrange(20,50)/100&amp;#10;        &amp;#10;        if i == 0:&amp;#10;            # for the first line, pick a point at random 10% away from the edge&amp;#10;            start[i] = [random.randrange(-40, 40)/100, random.randrange(-40, 40)/100]&amp;#10;        else:   &amp;#10;            # for all subsequent lines, start point is the end of the last point&amp;#10;            start[i] = [end[i-1][0], end[i-1][1]]&amp;#10;        &amp;#10;        # find the endpoint in a similar way&amp;#10;        end[i] = [start[i][0] + length[i]*math.cos(math.radians(angle[i])), start[i][1] + length[i]*math.sin(math.radians(angle[i]))]&amp;#10;        &amp;#10;        # check that the lines stay within the screen&amp;#10;        if abs(end[i][0]) &lt; 0.4 and abs(end[i][1]) &lt; 0.4 and abs(start[i][0]) &lt; 0.4 and abs(start[i][1]) &lt; 0.4:&amp;#10;            within = 1&amp;#10;&amp;#10;        # make the line&amp;#10;        line = visual.Line(win, start=(start[i]), end=(end[i]), lineColor=color, lineWidth = 6)&amp;#10;&amp;#10;        # check that the lines don't cross a previous line?&amp;#10;        #if i &gt; 0:&amp;#10;        #    for prev_line in lines:&amp;#10;        #        if line.overlaps(prev_line):&amp;#10;        #            within = 0&amp;#10;    &amp;#10;    # make the line object&amp;#10;    lines.append(line)&amp;#10;    &amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="# display lines&amp;#10;for line in lines:&amp;#10;    if line.status == NOT_STARTED and tThisFlip &gt;= 0.0-frameTolerance:&amp;#10;        # keep track of start time/frame for later&amp;#10;        line.frameNStart = frameN  # exact frame index&amp;#10;        line.tStart = t  # local t and not account for scr refresh&amp;#10;        line.tStartRefresh = tThisFlipGlobal  # on global time&amp;#10;        win.timeOnFlip(line, 'tStartRefresh')  # time at next scr refresh&amp;#10;        line.setAutoDraw(True)&amp;#10;&amp;#10;# wait for mouse release&amp;#10;if wait == 0 and sum(buttons) == 0:&amp;#10;    wait = 1&amp;#10;    draw_start = t&amp;#10;&amp;#10;elif wait &gt; 0 and sum(buttons) &gt; 0:&amp;#10;    wait = 2&amp;#10;    dur = round(t - draw_start,2)&amp;#10;    # hide lines&amp;#10;    for line in lines:&amp;#10;        line.setAutoDraw(False)&amp;#10;    &amp;#10;    # loop over all line segments&amp;#10;    j = [0 for i in range(n)]&amp;#10;    for i in range(n):&amp;#10;        j[i] = abs(math.cos(math.radians(angle[i]))*(mouse.x[-1] - start[i][0]) - math.sin(math.radians(angle[i]))*(mouse.y[-1] - start[i][1]))&amp;#10;    &amp;#10;    current_dist = round(min(j),2)&amp;#10;    # add the smallest one to the counter&amp;#10;    dist.append(min(j))&amp;#10;    &amp;#10;elif wait == 2 and sum(buttons) == 0:&amp;#10;    wait = 3" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((util.sum(buttons) &gt; 0)) {&amp;#10;    wait = 1;&amp;#10;    dur = Math.round((t - brush.tStart), 2);&amp;#10;}&amp;#10;if ((wait &gt; 0)) {&amp;#10;    if ((util.sum(buttons) === 0)) {&amp;#10;        wait = 2;&amp;#10;    }&amp;#10;}&amp;#10;for (var line, _pj_c = 0, _pj_a = lines, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    line = _pj_a[_pj_c];&amp;#10;    if (((line.status === NOT_STARTED) &amp;&amp; (tThisFlip &gt;= (0.0 - frameTolerance)))) {&amp;#10;        line.frameNStart = frameN;&amp;#10;        line.tStart = t;&amp;#10;        line.tStartRefresh = tThisFlipGlobal;&amp;#10;        psychoJS.window.timeOnFlip(line, &quot;tStartRefresh&quot;);&amp;#10;        line.setAutoDraw(true);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="brush.setAutoDraw(false);&amp;#10;for (var line, _pj_c = 0, _pj_a = lines, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    line = _pj_a[_pj_c];&amp;#10;    line.setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="mean_dist = round(sum(dist)/len(dist),2)&amp;#10;brush.reset()" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="next">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="0" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="next" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="90" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="triangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$(0.12, 0.12)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="wait == 3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
    </Routine>
    <Routine name="fb">
      <CodeComponent name="bar_code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((nSelf === 0)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if nSelf == 0 or nTrial == 0:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="bar_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="bar_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.04" valType="code"/>
        <Param name="name" updates="None" val="bar_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.5, 0.25)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every frame" val="" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="0.5" valType="code"/>
      </TextComponent>
      <TextComponent name="bar_label_high">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="bar_label_high" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.43)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="kõrge täpsus" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <PolygonComponent name="bar_bar">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="bar_bar" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.05, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <TextComponent name="bar_label_low">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
        <Param name="name" updates="None" val="bar_label_low" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -0.43)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="madal täpsus" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <PolygonComponent name="bar_next">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="0" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="bar_next" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="90" valType="code"/>
        <Param name="pos" updates="constant" val="(0.7, -0.35)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="triangle" valType="str"/>
        <Param name="size" updates="set every repeat" val="$(0.12, 0.12)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <MouseComponent name="bar_mouse">
        <Param name="clickable" updates="constant" val="bar_next" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="valid click" valType="str"/>
        <Param name="name" updates="None" val="bar_mouse" valType="code"/>
        <Param name="newClicksOnly" updates="constant" val="True" valType="bool"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
        <Param name="saveParamsClickable" updates="constant" val="name," valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
        <Param name="timeRelativeTo" updates="constant" val="mouse onset" valType="str"/>
      </MouseComponent>
      <PolygonComponent name="bar_p1">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1, 1, 1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$color" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="bar_p1" valType="code"/>
        <Param name="opacity" updates="constant" val="0.5" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="$perf_pos[0]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="circle" valType="str"/>
        <Param name="size" updates="constant" val="[0.01,0.01]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <PolygonComponent name="bar_p2">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1, 1, 1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$color" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="bar_p2" valType="code"/>
        <Param name="opacity" updates="constant" val="0.5" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="$perf_pos[1]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="circle" valType="str"/>
        <Param name="size" updates="constant" val="[0.01,0.01]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
      <PolygonComponent name="bar_p3">
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="contrast" updates="constant" val="1" valType="num"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$color" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="bar_p3" valType="code"/>
        <Param name="opacity" updates="constant" val="0.5" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every frame" val="$perf_pos[2]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="circle" valType="str"/>
        <Param name="size" updates="constant" val="[0.01,0.01]" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="vertices" updates="constant" val="" valType="list"/>
      </PolygonComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="block_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('block_id', 1), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.05), ('points_text', '5 eurot')]), OrderedDict([('block_id', 2), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.2), ('points_text', '5 eurot')]), OrderedDict([('block_id', 3), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.35), ('points_text', '5 eurot')]), OrderedDict([('block_id', 4), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.05), ('points_text', '5 eurot')]), OrderedDict([('block_id', 5), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.2), ('points_text', '5 eurot')]), OrderedDict([('block_id', 6), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.35), ('points_text', '5 eurot')]), OrderedDict([('block_id', 7), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.05), ('points_text', '20 eurot')]), OrderedDict([('block_id', 8), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.2), ('points_text', '20 eurot')]), OrderedDict([('block_id', 9), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.35), ('points_text', '20 eurot')]), OrderedDict([('block_id', 10), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.05), ('points_text', '20 eurot')]), OrderedDict([('block_id', 11), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.2), ('points_text', '20 eurot')]), OrderedDict([('block_id', 12), ('social_goal', 0.25), ('points_goal', 0.15), ('result', 0.35), ('points_text', '20 eurot')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="blocks.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="10" valType="code"/>
      <Param name="name" updates="None" val="block_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="intro"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="$nTrial" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="draw"/>
    <LoopTerminator name="trials"/>
    <Routine name="fb"/>
    <LoopInitiator loopType="TrialHandler" name="assess_emotion">
      <Param name="Selected rows" updates="None" val="$whichSelf" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('qst1', 1), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'naudingut, rõõmu'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 2), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'lootusrikkust, optimismi'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 3), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'uhkust, rahulolu'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 4), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'kergendust, muretust'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 5), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'viha, ärritust'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 6), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'ärevust, kõhklust'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 7), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'piinlikkust, pettumust'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 8), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'lootusetust, abitust'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 9), ('construct', 'emotion'), ('item1', 'Kui tugevalt tunned sa praegu '), ('item2', 'igavust, tüdimust'), ('label_low', 'Üldse mitte'), ('label_high', 'Väga tugevalt')]), OrderedDict([('qst1', 10), ('construct', 'goal_post'), ('item1', 'Mil määral sa tahtsid selles plokis '), ('item2', 'saada hea tulemus'), ('label_low', 'Ei tahtnud üldse'), ('label_high', 'Tahtsin väga')]), OrderedDict([('qst1', 11), ('construct', 'goal_post'), ('item1', 'Mil määral sa tahtsid selles plokis '), ('item2', 'vältida halba tulemust'), ('label_low', 'Ei tahtnud üldse'), ('label_high', 'Tahtsin väga')]), OrderedDict([('qst1', 12), ('construct', 'goal_post'), ('item1', 'Mil määral sa tahtsid selles plokis '), ('item2', 'ennast ületada'), ('label_low', 'Ei tahtnud üldse'), ('label_high', 'Tahtsin väga')]), OrderedDict([('qst1', 13), ('construct', 'goal_post'), ('item1', 'Mil määral sa tahtsid selles plokis '), ('item2', 'vältida endale alla jäämist'), ('label_low', 'Ei tahtnud üldse'), ('label_high', 'Tahtsin väga')]), OrderedDict([('qst1', 14), ('construct', 'goal_post'), ('item1', 'Mil määral sa tahtsid selles plokis '), ('item2', 'olla teistest üle'), ('label_low', 'Ei tahtnud üldse'), ('label_high', 'Tahtsin väga')]), OrderedDict([('qst1', 15), ('construct', 'goal_post'), ('item1', 'Mil määral sa tahtsid selles plokis '), ('item2', 'vältida teistele alla jäämist'), ('label_low', 'Ei tahtnud üldse'), ('label_high', 'Tahtsin väga')]), OrderedDict([('qst1', 16), ('construct', 'goal_pre'), ('item1', 'Mil määral sa tahad algavas plokis'), ('item2', 'saada hea tulemus'), ('label_low', 'Ei taha üldse'), ('label_high', 'Tahan väga')]), OrderedDict([('qst1', 17), ('construct', 'goal_pre'), ('item1', 'Mil määral sa tahad algavas plokis'), ('item2', 'vältida halba tulemust'), ('label_low', 'Ei taha üldse'), ('label_high', 'Tahan väga')]), OrderedDict([('qst1', 18), ('construct', 'goal_pre'), ('item1', 'Mil määral sa tahad algavas plokis'), ('item2', 'ennast ületada'), ('label_low', 'Ei taha üldse'), ('label_high', 'Tahan väga')]), OrderedDict([('qst1', 19), ('construct', 'goal_pre'), ('item1', 'Mil määral sa tahad algavas plokis'), ('item2', 'vältida endale alla jäämist'), ('label_low', 'Ei taha üldse'), ('label_high', 'Tahan väga')]), OrderedDict([('qst1', 20), ('construct', 'goal_pre'), ('item1', 'Mil määral sa tahad algavas plokis'), ('item2', 'olla teistest üle'), ('label_low', 'Ei taha üldse'), ('label_high', 'Tahan väga')]), OrderedDict([('qst1', 21), ('construct', 'goal_pre'), ('item1', 'Mil määral sa tahad algavas plokis'), ('item2', 'vältida teistele alla jäämist'), ('label_low', 'Ei taha üldse'), ('label_high', 'Tahan väga')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="self_report.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="$nSelf" valType="code"/>
      <Param name="name" updates="None" val="assess_emotion" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="assess"/>
    <LoopTerminator name="assess_emotion"/>
    <LoopTerminator name="block_loop"/>
  </Flow>
</PsychoPy2experiment>
